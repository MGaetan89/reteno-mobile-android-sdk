image: jangrewe/gitlab-ci-android

variables:
  DOCKER_DRIVER: overlay2

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - chmod +x ./gradlew

cache:
  - key: "build-number"
    paths:
      - build-number
  - key: "$CI_COMMIT_REF_SLUG"
    paths:
      - last-build-hash
  - key: ${CI_PROJECT_ID}
    paths:
      - .gradle/

# Run for merge requests/web/trigger only
workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "trigger"

# Make Project
assembleDebug:
  stage: build
  interruptible: true
  before_script:
    - mkdir keystore
    - base64 -d $DEBUG_KEYSTORE > keystore/debug.keystore
    - base64 -d $KEYSTORE_CONFIG_GRADLE > keystore/keystore_config.gradle
    - base64 -d $FIREBASE_JSON > keystore/firebase_app_distribution.json
    - base64 -d $RELEASE_KEYSTORE > keystore/release.keystore
    - base64 -d $LOCAL_PROPERTIES > local.properties
    - base64 -d $KEYS_PROPERTIES > RetenoSdkCore/keys.properties
    - chmod +x ./gradlew
  script:
    - ./gradlew assembleDebug
  artifacts:
    paths:
      - app/build/outputs/
  tags:
    - docker

assembleQa:
  stage: build
  interruptible: true
  before_script:
    - mkdir keystore
    - base64 -d $DEBUG_KEYSTORE > keystore/debug.keystore
    - base64 -d $KEYSTORE_CONFIG_GRADLE > keystore/keystore_config.gradle
    - base64 -d $FIREBASE_JSON > keystore/firebase_app_distribution.json
    - base64 -d $RELEASE_KEYSTORE > keystore/release.keystore
    - base64 -d $LOCAL_PROPERTIES > local.properties
    - base64 -d $KEYS_PROPERTIES > RetenoSdkCore/keys.properties
    - chmod +x ./gradlew
  script:
    - ./gradlew assembleQa
  artifacts:
    paths:
      - app/build/outputs/
  tags:
    - docker

# Run all tests, if any fails, interrupt the pipeline(fail it)
testsDebug:
  stage: test
  interruptible: true
  before_script:
    - mkdir keystore
    - base64 -d $DEBUG_KEYSTORE > keystore/debug.keystore
    - base64 -d $KEYSTORE_CONFIG_GRADLE > keystore/keystore_config.gradle
    - base64 -d $FIREBASE_JSON > keystore/firebase_app_distribution.json
    - base64 -d $RELEASE_KEYSTORE > keystore/release.keystore
    - base64 -d $LOCAL_PROPERTIES > local.properties
    - base64 -d $KEYS_PROPERTIES > RetenoSdkCore/keys.properties
    - chmod +x ./gradlew
  script:
    - ./gradlew --no-daemon -s testDebugAll
  artifacts:
    paths:
      - ./RetenoSdkCore/build/reports/tests/testDebugUnitTest
      - ./RetenoSdkFcm/build/reports/tests/testDebugUnitTest
      - ./RetenoSdkPush/build/reports/tests/testDebugUnitTest
    when: always
    expire_in: 2 week
  tags:
    - docker


deployQaToFirebase:
  stage: deploy
  before_script:
    - export VERSION_NAME_APP=$(grep -E "VERSION_NAME" gradle.properties | cut -d "=" -f2)
    - export VERSION_SDK=$(grep -E "VERSION_NAME" gradle.properties | cut -d "=" -f2)
    - export AUTHOR_NAME=$(git log -1 --pretty=format:'%an')
    - export AUTHOR_EMAIL=$(git log -1 --pretty=format:'%ae')
    - mkdir keystore
    - base64 -d $DEBUG_KEYSTORE > keystore/debug.keystore
    - base64 -d $KEYSTORE_CONFIG_GRADLE > keystore/keystore_config.gradle
    - base64 -d $FIREBASE_JSON > keystore/firebase_app_distribution.json
    - base64 -d $RELEASE_KEYSTORE > keystore/release.keystore
    - base64 -d $LOCAL_PROPERTIES > local.properties
    - base64 -d $KEYS_PROPERTIES > RetenoSdkCore/keys.properties
    - chmod +x ./gradlew
  script:
    - touch build-number
    - BUILD_NUMBER_CACHE=0
    - BUILD_NUMBER_VARIABLE=$BUILD_NUMBER
    - test -s build-number && BUILD_NUMBER_CACHE=$(<build-number)
    - >
      test $BUILD_NUMBER_CACHE -lt $BUILD_NUMBER_VARIABLE
      && echo $((++BUILD_NUMBER_VARIABLE))> build-number
      || echo $((++BUILD_NUMBER_CACHE))> build-number
    - export BUILD_NUMBER=$(<build-number)
    - echo $BUILD_NUMBER
    - touch last-build-hash
    - echo "" > release-notes.txt
    - sed -i 's|^|Environment - Qa\n|' release-notes.txt
    - git rev-parse --short HEAD> last-build-hash
    - sed -i '1s|^|Version Sdk - '"$VERSION_SDK"'\n|' release-notes.txt
    - sed -i '1s|^|Author - '"$AUTHOR_NAME($AUTHOR_EMAIL)"'\n|' release-notes.txt
    - sed -i '1s|^|Version App - '"$VERSION_NAME_APP ($BUILD_NUMBER)"'\n|' release-notes.txt
    - sed -i '1s|^|Branch - '"$CI_COMMIT_REF_NAME"'\n|' release-notes.txt
    - ./gradlew appDistributionUploadQa --artifactType="APK"
    - RELEASE_NOTES=$(<release-notes.txt)
    - echo "$RELEASE_NOTES"
    - ./notify-slack.sh "$RELEASE_NOTES"
  artifacts:
    paths:
      - ./app/build/outputs/apk/qa/app-qa.apk
    when: on_success
    expire_in: 2 week
  when: manual
  tags:
    - docker